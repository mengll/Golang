// utest project utest.go
package utest

//创建Http的Get的请求的方式，创建请求
import (
	"io/ioutil"
	"net/http"
	"strings"
)

//创建接口

func HttpDO(ptype, url, data string) string {
	//http.Post()
	client := http.Client{}
	req, err := http.NewRequest(ptype, url, strings.NewReader(data))
	if err != nil {
	}

	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
	//req.Header.Set("Cookie", "name=anny")
	resp, err := client.Do(req)
	defer resp.Body.Close()

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		// handle error
	}

	return string(body)
}

//创建get的请求的参数
func HttpGet(url string) string {
	resp, err := http.Get(url)
	if err != nil {
		// handle error
	}

	defer resp.Body.Close()
	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		// handle error
	}
	return string(body)
}

// 创建生成签名的方法的过程
-------------------------------------------------------------------------------------------------------------------------------------------
1)单元测试import "testing"
	 t *testing.T 就是普通的测试 
	 b *testing.B 是压力测试 需要一Benchmark开头
	 func BenchmarkGUID(b *testing.B) 执行相关的，单元压力测试的方法

	package main

	import (
		"fmt"
		"testing"
	)

	func TestMain(t *testing.T) {
		fmt.Println("This is main function")
		main()
		fmt.Println("This end")
	}

	//bingfa ceshi
	func BenchmarkMain(b *testing.B) {
		main()
	}




