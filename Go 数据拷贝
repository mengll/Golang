package main

import (
	"fmt"
)

type KeyVal struct {
	Name  string
	Score int
}

func main() {
	arr := make(map[string]*KeyVal)
	arr["11"] = &KeyVal{Name: "fdu", Score: 23}
	arr["11"].Name = "哈哈哈"
	fmt.Println(*arr["11"])
}
#感觉是取值的时候，只是取的一个备份 复合类型不能直接修改元数据

在Go语言中数组是一个值类型（value type）所有的值类型的变量在赋值和作为参数，传递时都将产生一复制动作，如果对数组作为函数的参数类型，则在函数调用是参数将
发生数据复制 因此在函数体，无法修改传入的数组内容，因为传递的数据，只是数组的一个副本

2）切片本身是一种，指向数组的指针，实际上有自己的数据结构 数组切片 可使用make函数创建 ，make（[]int,5,10） 当前切片的长度为5 当前切片的容量为10 cap len
切片传递的是当前数据的地址
func pp(pp []int) {
	for i, v := range pp {
		pp[i] = v + 1
	}
}

	kl := make([]int, 10)
	pp(kl)
	fmt.Println(kl)

输出：[1 1 1 1 1 1 1 1 1 1]


3）go 元素的删除使用delete的方式删除，切片元素
从切片中获取数据， value,ok := mymap["1234"] 当前的数据当前的数据获取成功后，保存


4）go if 条件的数据的返回的时候不能在 if{}else{} 中返回，不然不知道，返回值





